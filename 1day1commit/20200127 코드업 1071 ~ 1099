<코드업 기초 100제>

1071 : [기초-반복실행구조] 0 입력될 때까지 무한 출력하기1

a = list(map(int, input().split()))
for i in a:
    if i == 0:
        break
    else:
        print(i)
       
       
1072 : [기초-반복실행구조] 정수 입력받아 계속 출력하기

n = int(input())
n_list = list(map(int, input().split()))
for i in n_list:
    print(i)
    

1073 : [기초-반복실행구조] 0 입력될 때까지 무한 출력하기2

a = list(map(int, input().split()))
for i in a:
    if i == 0:
        break
    else:
        print(i)
        
        
1074 : [기초-반복실행구조] 정수 1개 입력받아 카운트다운 출력하기1

n = int(input())
while n > 0:
    print(n)
    n -= 1
    
    
1075 : [기초-반복실행구조] 정수 1개 입력받아 카운트다운 출력하기2

n = int(input())
while n > 0:
    n -= 1
    print(n)
    
    
1076 : [기초-반복실행구조] 문자 1개 입력받아 알파벳 출력하기

n = ord(input())
a = 97
result = []
while a <= n:
    result.append(chr(a))
    a += 1
print(' '.join(result))


1077 : [기초-반복실행구조] 정수 1개 입력받아 그 수까지 출력하기

n = int(input())
for i in range(n+1):
    print(i)
    

1078 : [기초-종합] 짝수 합 구하기

n = int(input())
even = []
for i in range(1, n+1):
    if i % 2 == 0:
        even.append(i)
print(sum(even))


1079 : [기초-종합] 원하는 문자가 입력될 때까지 반복 출력하기

n = list(map(str, input().split()))
for i in n:
    if i == 'q':
        print(i)
        break
    else:
        print(i)
        

1080 : [기초-종합] 언제까지 더해야 할까?

n = int(input())
i = 0
i_sum = 0
while i_sum < n:
    i += 1
    i_sum += i
print(i)


1081 : [기초-종합] 주사위를 2개 던지면?

a, b = map(int, input().split())
for i in range(1, a+1):
    for j in range(1, b+1):
        print(i, j)
        

1082 : [기초-종합] 16진수 구구단?

a = int(input(), 16)
b = hex(a)[2:].upper()      #hex(42) 가 '0x2a'의 값일 때 2A를 반환
for i in range(1, 16):
    c = hex(i)[2:].upper()
    d = hex(a * i)[2:].upper()
    print(b + "*" + c  + "=" + d)
    
    
1083 : [기초-종합] 3 6 9 게임의 왕이 되자!

n = int(input())
result = []
for i in range(1, n + 1):
    if i % 3 == 0:
        result.append('X')
    else:
        result.append(i)
result_join = ' '.join(map(str, result))
print(result_join)


1084 : [기초-종합] 빛 섞어 색 만들기

a = list(map(int, input().split()))
count = 0
for i in range(a[0]):
    for j in range(a[1]):
        for k in range(a[2]):
            print(i, j, k)
            count += 1
print(count)


1085 : [기초-종합] 소리 파일 저장용량 계산하기

h, b, c, s = map(int, input().split())
capacity = (h * b * c * s) / 8 / 1024 / 1024
print('%.1f MB' %capacity)


1086 : [기초-종합] 그림 파일 저장용량 계산하기

w, h, b = map(int, input().split())
capacity = (w * h * b) / 8 / 1024 / 1024
print('%.2f MB' %capacity)


1087 : [기초-종합] 여기까지! 이제 그만~

n = int(input())
i = 0
i_sum = 0
while i_sum < n:
    i += 1
    i_sum += i
print(i_sum)


1088 : [기초-종합] 3의 배수는 통과?

n = int(input())
result = []
for i in range(1, n + 1):
    if i % 3 != 0:
        result.append(i)
print(' '.join(map(str, result)))

* 다른 답안 *
n = int(input())
for i in range(1, n + 1) :
    if i % 3 == 0 :
        continue
    print(i, end=' ')


1089 : [기초-종합] 수 나열하기1

start, gap, n = map(int, input().split())
print('%d' %(start + gap * (n-1)))


1090 : [기초-종합] 수 나열하기2

start, gap, n = map(int, input().split())
print('%d' %(start * gap ** (n-1)))


1091 : [기초-종합] 수 나열하기3

start, m, d, n = map(int, input().split())
for i in range(n - 1):
    start = start * m + d
print(start)


1092 : [기초-종합] 함께 문제 푸는 날

a, b, c = map(int, input().split())
n = 0
count = 0
while count < 1:
    n += 1
    if n % a == 0 and n % b == 0 and n % c == 0:
        count += 1
print(n)


1093 : [기초-1차원배열] 이상한 출석 번호 부르기1

n = int(input())
a = input().split()
result = []

for _ in range(24):
    result.append(0)

for i in range(n):
    result[int(a[i])] += 1

for i in range(1, 24):
    print(result[i], end = ' ')
    

1094 : [기초-1차원배열] 이상한 출석 번호 부르기2

n = int(input())
element = list(input().split())
for i in reversed(element):
    print(i, end = ' ')
    

1095 : [기초-1차원배열] 이상한 출석 번호 부르기3

n = int(input())
element = list(map(int, input().split()))
k = 23
for i in range(n):
    if k > element[i]:
        k = element[i]
print(k)


1096 : [기초-2차원배열] 바둑판에 흰 돌 놓기

n = int(input())
matrix = [[0 for _ in range(19)] for _ in range(19)]
for i in range(n):
    a, b = map(int, input().split())
    matrix[a - 1][b - 1] = 1
for i in matrix:
    print(' '.join(map(str, i)))
    
    
1097 : [기초-2차원배열] 바둑알 십자 뒤집기

m=[]
for i in range(20) :
    m.append([])
    for j in range(20) :
        m[i].append(0)

for i in range(19) :
    a=input().split()
    for j in range(19) :
        m[i+1][j+1]=int(a[j])
    
n=int(input())

for i in range(n) :
    x,y=input().split()
    for j in range(1, 20) :
        
        if m[j][int(y)]==0 :
            m[j][int(y)]=1
        else :
            m[j][int(y)]=0

        if m[int(x)][j]==0 :
            m[int(x)][j]=1
        else :
            m[int(x)][j]=0

for i in range(1, 20) :
    for j in range(1, 20) :
        print(m[i][j], end=' ')
    print()
    
    
1098 : [기초-2차원배열] 설탕과자 뽑기

h, w = map(int, input().split())
n = int(input())
matrix = [[0 for _ in range(w)] for _ in range(h)]

for i in range(n):
    l, d, x, y = map(int, input().split())

    for j in range(l):
        if d == 0:
            matrix[x - 1][y - 1 + j] = 1
        elif d == 1:
            matrix[x - 1 + j][y - 1] = 1

for i in matrix:
    print(' '.join(map(str, i)))
    

1099 : [기초-2차원배열] 성실한 개미

matrix = [[0 for _ in range(12)] for _ in range(12)]

for i in range(10):
    a = input().split()
    for j in range(10):
        matrix[i + 1][j + 1] = int(a[j])

x = 2
y = 2

while True:
    if matrix[x][y] == 0:
        matrix[x][y] = 9
    elif matrix[x][y] == 2:
        matrix[x][y] = 9
        break
    
    if (matrix[x][y + 1] == 1 and matrix[x + 1][y] == 1) or (x == 9 and y == 9):
        break

    if matrix[x][y + 1] != 1:
        y += 1
    elif matrix[x + 1][y] != 1:
        x += 1

for i in range(1, 11):
    for j in range(1, 11):
       print(matrix[i][j], end = ' ')
    print()
    
    
