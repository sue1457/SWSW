< 큐, 덱 >

18258. 큐 2

* 시간 초과 *

from collections import deque
import sys
input = sys.stdin.readline

class check:
    def __init__(self):
        self.queue = deque()

    def push(self, num):
        self.queue.append(num)

    def pop(self):
        if self.queue:
            return self.queue.popleft()
        else:
            return -1

    def size(self):
        return len(self.queue)

    def empty(self):
        if self.queue:
            return 0
        else:
            return 1

    def front(self):
        if not self.queue:
            return -1
        else:
            return self.queue[0]

    def back(self):
        if not self.queue:
            return -1
        else:
            return self.queue[-1]

n = int(input())
test = check()
source = [list(map(str, input().split())) for _ in range(n)]

for i in source:
    cmd = i[0]

    if len(i) == 2:
        test.push(i[1])
    elif cmd == 'size':
        print(test.size())
    elif cmd == 'empty':
        print(test.empty())
    elif cmd == 'pop':
        print(test.pop())
    elif cmd == 'front':
        print(test.front())
    elif cmd == 'back':
        print(test.back())
        
해결 방법 ==> input = sys.stdin.readline으로 지정해 둔 것을 삭제하고 모든 input을
sys.stdin.readline으로 작성해주니 시간초과가 해결되었다.


2164. 카드2

from collections import deque

card_num = int(input())
card_deque = deque([i for i in range(1, card_num + 1)])

while len(card_deque) != 1:
    card_deque.popleft()
    card_deque.rotate(-1)

print(card_deque[0])

popleft(), pop(0), rotate(1), rotate(-1)등 다양한 함수를 학습할 수 있었던 문제.


11866. 요세푸스 문제 0

n, k = map(int, input().split())
stack = [ i for i in range(1, n + 1)]
result = []
temp = k - 1

for i in range(n):
    if len(stack) > temp:
        result.append(stack.pop(temp))
        temp += k - 1
    elif len(stack) <= temp:
        temp %= len(stack)
        result.append(stack.pop(temp))
        temp += k - 1

print('<', end = '')
for i in result:
    if i == result[-1]:
        print(i, end = '')
    else:
        print('%s, ' %(i), end = '')
print('>')


1966. 프린터 큐

case = int(input())

for i in range(case):
    n, m = map(int, input().split())
    c = list(map(int, input().split()))
    
    count = 0
    ans = [0] * n
    ans[m] = 1

    while True:
        if c.index(max(c)) == 0:
            del c[0]
            count += 1
            if ans[0] == 1:
                print(count)
                break
            else:
                del ans[0]
        else:
            c.append(c.pop(0))
            ans.append(ans.pop(0))
            
            
10866. 덱

import sys
input = sys.stdin.readline

class deque:
    def __init__(self):
        self.arr = list()
    
    def push_front(self, x):
        self.arr.insert(0, x)
    
    def push_back(self, x):
        self.arr.append(x)

    def pop_front(self):
        if self.empty():
            return -1
        else:
            return self.arr.pop(0)

    def pop_back(self):
        if self.empty():
            return -1
        else:
            return self.arr.pop()

    def size(self):
        return len(self.arr)

    def empty(self):
        if self.size() == 0:
            return 1
        else:
            return 0

    def front(self):
        if self.empty():
            return -1
        else:
            return self.arr[0]

    def back(self):
        if self.empty():
            return -1
        else:
            return self.arr[-1]

n = int(input())
deque = deque()

for _ in range(n):
    cmd = input().split()
    order = cmd[0]

    if order == 'push_front':
        deque.push_front(int(cmd[1]))
    elif order == 'push_back':
        deque.push_back(int(cmd[1]))
    elif order == 'pop_front':
        print(deque.pop_front())
    elif order == 'pop_back':
        print(deque.pop_back())
    elif order == 'front':
        print(deque.front())
    elif order == 'back':
        print(deque.back())
    elif order == 'empty':
        print(deque.empty())
    elif order == 'size':
        print(deque.size())
