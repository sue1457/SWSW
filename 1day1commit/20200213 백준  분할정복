< 분할정복 >

11401. 이항 계수 3

n, k = map(int, input().split())
p = 1000000007
def bc(n, k):
    if k == 0:
        return 1
    elif k == 1:
        return n
    elif k % 2 > 0:
        return bc(n, k - 1) * n
    else:
        d = bc(n, k // 2)
        d %= p
        return d ** 2 % p

A = 1
B = 1
for i in range(1, n + 1):
    A *= i
    A %= p
for i in range(1, k + 1):
    B *= i
    B %= p
for i in range(1, n - k + 1):
    B *= i
    B %= p

B = bc(B, (p - 2) % p)
print((A * B) % p)


2740. 행렬 곱셈

* 런타임 에러 *

N, M = map(int, input().split())
A = [list(map(int, input().split())) for _ in range(N)]

M, K = map(int, input().split())
B = [list(map(int, input().split())) for _ in range(K)]

C = [[0 for _ in range(K)] for _ in range(N)]

for n in range(N):
    for k in range(K):
        for m in range(M):
            C[n][k] += A[n][m] * B[m][k]

for i in C:
    for j in i:
        print(j, end = ' ')
    print()
    
C라는 행렬을 따로 만들고 A와 B를 곱한 값을 대입해서 다시 C를 차례대로 출력하는 방법의 결과로 런타임 에러가 나왔다.
따라서 행렬 C를 없애고 A와 B를 계산하는 for 루프 안에서 즉각적으로 결과를 출력하는 방식으로 런타임 에러를 해결할 수 있었다.

* 해답 코드 *

import sys

N, M = map(int, sys.stdin.readline().split())
A = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]

M, K = map(int, sys.stdin.readline().split())
B = [list(map(int, sys.stdin.readline().split())) for _ in range(K)]

for n in range(N):
    for k in range(K):
        answer = 0
        for m in range(M):
            answer += A[n][m] * B[m][k]
        sys.stdout.write(str(answer) + ' ')
    sys.stdout.write('\n')
    
    
10830. 행렬 제곱

def matrix_mul(a, b):
    result = [[0] * N for _ in range(N)]
    for i in range(N):
        for j in range(N):
            for k in range(N):
                result[i][j] += a[i][k] * b[k][j]
    
    for i in range(N):
        for j in range(N):
            result[i][j] %= 1000
    
    return result

N, B = map(int, input().split())
A = [list(map(int, input().split())) for _ in range(N)]
B = bin(B)[2:]  #B를 2진법으로 변환하고, 앞의 0b를 제거함

#단위행렬
identity_matrix = [[1 if i == j else 0 for i in range(N)] for j in range(N)]

result = identity_matrix[:]
for i in range(len(B)):
    if B[-i-1] == '1':
        temp = A[:]
        while i != 0:
            temp = matrix_mul(temp, temp)
            i -= 1
        result = matrix_mul(result, temp)

for row in result:
    print(*row)
    

2749. 피보나치 수 3

내일 다시!
